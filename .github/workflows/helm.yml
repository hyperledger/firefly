name: Helm

on:
  push:
    tags:
      - "helm-v*"
    branches:
      - main
    paths:
      - "deploy/charts/**/*"
      - ".github/workflows/helm.yml"
  pull_request:
    branches:
      - main
    paths:
      - "deploy/charts/**/*"
      - ".github/workflows/helm.yml"
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: setup helm
        uses: azure/setup-helm@v1
        with:
          version: 3.7.2

      - name: setup chart-testing tool
        uses: helm/chart-testing-action@v2.0.1

      - name: lint chart
        run: ct lint --charts deploy/charts/firefly

      - name: test chart templating
        run: helm template deploy/charts/firefly

      - name: setup kind
        uses: engineerd/setup-kind@v0.5.0
        with:
          version: v0.11.1

      - name: install cert-manager
        run: |
          kubectl create ns cert-manager || true
          kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.4.0/cert-manager.crds.yaml
          helm repo add jetstack https://charts.jetstack.io || true
          helm install --skip-crds -n cert-manager cert-manager jetstack/cert-manager --wait
          kubectl apply -n cert-manager -f deploy/manifests/tls-issuers.yaml

      - name: install prom-operator
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts || true
          helm install --set kubeStateMetrics.enabled=false --set nodeExporter.enabled=false --set grafana.enabled=false kube-prometheus prometheus-community/kube-prometheus-stack

      - name: install postgres
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami || true
          helm install --set postgresqlPassword=firef1y --set extraEnv[0].name=POSTGRES_DATABASE --set extraEnv[0].value=firefly postgresql bitnami/postgresql

      - name: run chart integration test
        run: ct install --charts deploy/charts/firefly

      - name: debug k8s
        if: ${{ failure() }}
        run: |
          kubectl get pod -A
  release:
    needs: test
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/tags/helm-v') || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: chart-version
        run: |
          CHART_VERSION=$(helm show chart deploy/charts/firefly | grep '^version:' | awk '{ printf("%s", $2) }')
          echo "CHART_VERSION=${CHART_VERSION}" >> $GITHUB_ENV

      - name: head-version
        if: github.ref == 'refs/heads/main'
        run: |
          BUILD_TAG=${{ env.CHART_VERSION }}-$(date +"%Y%m%d")-$GITHUB_RUN_NUMBER
          echo "PUBLISH_VERSION=${BUILD_TAG}" >> $GITHUB_ENV

      - name: release-version
        if: startsWith(github.ref, 'refs/tags/helm-v')
        run: |
          TAG_VERSION=$(echo -n "${GITHUB_REF##*/}" | sed 's/helm-v//g')
          if [[ "$TAG_VERSION" != "${{ env.CHART_VERSION }}" ]]; then
            echo "Release tag version [$TAG_VERSION] does not match the chart's version [${{ env.CHART_VERSION }}]"
            exit 1
          fi
          echo "PUBLISH_VERSION=${{ env.CHART_VERSION }}" >> $GITHUB_ENV

      - name: setup helm
        uses: azure/setup-helm@v1
        with:
          version: 3.7.2

      - name: helm publish
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ghcr.io -u $GITHUB_ACTOR --password-stdin

          helm package --version ${{ env.PUBLISH_VERSION }} ./deploy/charts/firefly
          helm push firefly-${{ env.PUBLISH_VERSION }}.tgz oci://ghcr.io/hyperledger/helm
        env:
          HELM_EXPERIMENTAL_OCI: "1"
