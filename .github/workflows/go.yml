name: Go

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build and Test
        run: make

      - name: Upload coverage
        run: bash <(curl -s https://codecov.io/bash)

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Build Docker image
        run: make docker && docker save --output firefly.tar.gz hyperledger/firefly

      - name: Upload Docker image
        uses: actions/upload-artifact@v3
        with:
          name: firefly-docker
          path: firefly.tar.gz

  e2e-test:
    runs-on: ubuntu-latest
    needs: docker
    strategy:
      fail-fast: false
      matrix:
        blockchain-provider: [geth, fabric]
        exclude: [ blockchain-provider: geth, blockchain-provider: fabric ]
        include:
            - blockchain-provider: geth
              blockchain-connector: ethconnect
              test-suite: TestEthereumMultipartyE2ESuite
              database-type: sqlite3
              token-provider: erc20_erc721
              multiparty-enabled: true

            - blockchain-provider: geth
              blockchain-connector: ethconnect
              test-suite: TestEthereumMultipartyE2ESuite
              database-type: postgres
              token-provider: erc20_erc721
              multiparty-enabled: true
            
            - blockchain-provider: geth
              blockchain-connector: ethconnect
              test-suite: TestEthereumMultipartyE2ESuite
              database-type: sqlite3
              token-provider: erc1155
              multiparty-enabled: true

            - blockchain-provider: geth
              blockchain-connector: ethconnect
              test-suite: TestEthereumMultipartyTokensRemoteNameE2ESuite
              database-type: postgres
              token-provider: erc20_erc721
              multiparty-enabled: true

            - blockchain-provider: fabric
              blockchain-connector: fabconnect
              test-suite: TestFabricE2ESuite
              database-type: sqlite3
              token-provider: none
              multiparty-enabled: true

            - blockchain-provider: geth
              blockchain-connector: ethconnect
              test-suite: TestEthereumGatewayE2ESuite
              database-type: sqlite3
              token-provider: erc20_erc721
              multiparty-enabled: false

            - blockchain-provider: fabric
              blockchain-connector: fabconnect
              test-suite: TestFabricGatewayE2ESuite
              database-type: sqlite3
              token-provider: none
              multiparty-enabled: false

            - blockchain-provider: geth
              blockchain-connector: evmconnect
              test-suite: TestEthereumMultipartyE2ESuite
              database-type: sqlite3
              token-provider: erc20_erc721
              multiparty-enabled: true

            - blockchain-provider: geth
              blockchain-connector: evmconnect
              test-suite: TestEthereumGatewayE2ESuite
              database-type: sqlite3
              token-provider: erc1155
              multiparty-enabled: false

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Download Docker image
        uses: actions/download-artifact@v3
        with:
          name: firefly-docker

      - name: Load Docker image
        run: docker load --input firefly.tar.gz

      - name: Run E2E tests
        env:
          BUILD_FIREFLY: false
          TEST_SUITE: ${{ matrix.test-suite }}
          BLOCKCHAIN_PROVIDER: ${{ matrix.blockchain-provider }}
          BLOCKCHAIN_CONNECTOR: ${{ matrix.blockchain-connector }}
          TOKENS_PROVIDER: ${{ matrix.token-provider }}
          DATABASE_TYPE: ${{ matrix.database-type }}
          MULTIPARTY_ENABLED: ${{ matrix.multiparty-enabled }}
        run: ./test/e2e/run.sh

      - name: Archive container logs
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: container-logs-${{ matrix.test-suite }}-${{ matrix.blockchain-provider }}-${{ matrix.blockchain-connector }}-${{ matrix.database-type }}-${{ matrix.token-provider }}
          path: containerlogs/logs.txt
