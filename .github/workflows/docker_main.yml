name: Docker Main Build

on:
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set build tag
        id: build_tag_generator
        run: |
          RELEASE_TAG=$(curl https://api.github.com/repos/${{ github.repository_owner }}/firefly/releases/latest -s | jq .tag_name -r)
          BUILD_TAG=$RELEASE_TAG-$(date +"%Y%m%d")-$GITHUB_RUN_NUMBER
          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo ::set-output name=BUILD_TAG::$BUILD_TAG
          echo ::set-output name=BUILD_DATE::$BUILD_DATE

      - name: Read manifest.json
        id: manifest
        run: |
          echo ::set-output name=FIREFLY_BUILDER_TAG::$(cat manifest.json | jq -r '.build."firefly-builder".image')
          echo ::set-output name=FABRIC_BUILDER_TAG::$(cat manifest.json | jq -r '.build."fabric-builder".image')
          echo ::set-output name=FABRIC_BUILDER_PLATFORM::$(cat manifest.json | jq -r '.build."fabric-builder".platform')
          echo ::set-output name=SOLIDITY_BUILDER_TAG::$(cat manifest.json | jq -r '.build."solidity-builder".image')
          echo ::set-output name=BASE_TAG::$(cat manifest.json | jq -r '.build.base.image')
          echo ::set-output name=UI_TAG::$(cat manifest.json | jq -r '.ui.tag')
          echo ::set-output name=UI_RELEASE::$(cat manifest.json | jq -r '.ui.release')

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          provenance: false
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          platforms: linux/amd64
          tags: ghcr.io/${{ github.repository_owner }}/firefly:${{ steps.build_tag_generator.outputs.BUILD_TAG }},ghcr.io/${{ github.repository_owner }}/firefly:head
          labels: |
            commit=${{ github.sha }}
            build_date=${{ steps.build_tag_generator.outputs.BUILD_DATE }}
            tag=${{ steps.build_tag_generator.outputs.BUILD_TAG }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/firefly:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/firefly:buildcache,mode=max
          build-args: |
            FIREFLY_BUILDER_TAG=${{ steps.manifest.outputs.FIREFLY_BUILDER_TAG }}
            FABRIC_BUILDER_TAG=${{ steps.manifest.outputs.FABRIC_BUILDER_TAG }}
            FABRIC_BUILDER_PLATFORM=${{ steps.manifest.outputs.FABRIC_BUILDER_PLATFORM }}
            SOLIDITY_BUILDER_TAG=${{ steps.manifest.outputs.SOLIDITY_BUILDER_TAG }}
            BASE_TAG=${{ steps.manifest.outputs.BASE_TAG }}
            UI_TAG=${{ steps.manifest.outputs.UI_TAG }}
            UI_RELEASE=${{ steps.manifest.outputs.UI_RELEASE }}
            BUILD_VERSION=${{ steps.build_tag_generator.outputs.BUILD_TAG }}
            GIT_REF=${{ github.ref }}
