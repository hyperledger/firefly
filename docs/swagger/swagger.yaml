components: {}
info:
  description: Copyright Â© 2021 Kaleido, Inc.
  title: FireFly
  version: "1.0"
openapi: 3.0.2
paths:
  /broadcast/namespace:
    post:
      description: 'TODO: Description'
      operationId: postBroadcastNamespace
      parameters:
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  type: string
                name:
                  type: string
              type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                properties:
                  batch: {}
                  confirmed: {}
                  data:
                    items:
                      properties:
                        hash: {}
                        id: {}
                      type: object
                    type: array
                  hash: {}
                  header:
                    properties:
                      author:
                        type: string
                      cid: {}
                      created: {}
                      datahash: {}
                      group: {}
                      id: {}
                      namespace:
                        type: string
                      tag:
                        type: string
                      topics:
                        items:
                          type: string
                        type: array
                      txtype:
                        type: string
                      type:
                        type: string
                    type: object
                  local:
                    type: boolean
                  pending:
                    type: boolean
                  pins:
                    items:
                      type: string
                    type: array
                  rejected:
                    type: boolean
                type: object
          description: Success
        default:
          description: ""
  /namespaces:
    get:
      description: 'TODO: Description'
      operationId: getNamespaces
      parameters:
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: confirmed
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: description
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: message
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: name
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created: {}
                    description:
                      type: string
                    id: {}
                    message: {}
                    name:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
  /namespaces/{ns}:
    get:
      description: 'TODO: Description'
      operationId: getNamespace
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created: {}
                  description:
                    type: string
                  id: {}
                  message: {}
                  name:
                    type: string
                  type:
                    type: string
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/batches:
    get:
      description: 'TODO: Description'
      operationId: getBatches
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: author
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: confirmed
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: group
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: hash
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: namespace
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: payloadref
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: tx.id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: tx.type
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    author:
                      type: string
                    blobs:
                      items: {}
                      type: array
                    confirmed: {}
                    created: {}
                    hash: {}
                    id: {}
                    namespace:
                      type: string
                    payload:
                      properties:
                        data:
                          items:
                            properties:
                              blob:
                                properties:
                                  hash: {}
                                  public:
                                    type: string
                                type: object
                              created: {}
                              datatype:
                                properties:
                                  name:
                                    type: string
                                  version:
                                    type: string
                                type: object
                              hash: {}
                              id: {}
                              namespace:
                                type: string
                              validator:
                                type: string
                              value:
                                format: byte
                                type: string
                            type: object
                          type: array
                        messages:
                          items:
                            properties:
                              batch: {}
                              confirmed: {}
                              data:
                                items:
                                  properties:
                                    hash: {}
                                    id: {}
                                  type: object
                                type: array
                              hash: {}
                              header:
                                properties:
                                  author:
                                    type: string
                                  cid: {}
                                  created: {}
                                  datahash: {}
                                  group: {}
                                  id: {}
                                  namespace:
                                    type: string
                                  tag:
                                    type: string
                                  topics:
                                    items:
                                      type: string
                                    type: array
                                  txtype:
                                    type: string
                                  type:
                                    type: string
                                type: object
                              local:
                                type: boolean
                              pending:
                                type: boolean
                              pins:
                                items:
                                  type: string
                                type: array
                              rejected:
                                type: boolean
                            type: object
                          type: array
                        tx:
                          properties:
                            id: {}
                            type:
                              type: string
                          type: object
                      type: object
                    payloadRef:
                      type: string
                    type:
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
  /namespaces/{ns}/batches/{batchid}:
    get:
      description: 'TODO: Description'
      operationId: getBatchByID
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: batchid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  author:
                    type: string
                  blobs:
                    items: {}
                    type: array
                  confirmed: {}
                  created: {}
                  hash: {}
                  id: {}
                  namespace:
                    type: string
                  payload:
                    properties:
                      data:
                        items:
                          properties:
                            blob:
                              properties:
                                hash: {}
                                public:
                                  type: string
                              type: object
                            created: {}
                            datatype:
                              properties:
                                name:
                                  type: string
                                version:
                                  type: string
                              type: object
                            hash: {}
                            id: {}
                            namespace:
                              type: string
                            validator:
                              type: string
                            value:
                              format: byte
                              type: string
                          type: object
                        type: array
                      messages:
                        items:
                          properties:
                            batch: {}
                            confirmed: {}
                            data:
                              items:
                                properties:
                                  hash: {}
                                  id: {}
                                type: object
                              type: array
                            hash: {}
                            header:
                              properties:
                                author:
                                  type: string
                                cid: {}
                                created: {}
                                datahash: {}
                                group: {}
                                id: {}
                                namespace:
                                  type: string
                                tag:
                                  type: string
                                topics:
                                  items:
                                    type: string
                                  type: array
                                txtype:
                                  type: string
                                type:
                                  type: string
                              type: object
                            local:
                              type: boolean
                            pending:
                              type: boolean
                            pins:
                              items:
                                type: string
                              type: array
                            rejected:
                              type: boolean
                          type: object
                        type: array
                      tx:
                        properties:
                          id: {}
                          type:
                            type: string
                        type: object
                    type: object
                  payloadRef:
                    type: string
                  type:
                    type: string
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/broadcast/datatype:
    post:
      description: 'TODO: Description'
      operationId: postBroadcastDatatype
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                validator:
                  type: string
                value:
                  format: byte
                  type: string
                version:
                  type: string
              type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                properties:
                  batch: {}
                  confirmed: {}
                  data:
                    items:
                      properties:
                        hash: {}
                        id: {}
                      type: object
                    type: array
                  hash: {}
                  header:
                    properties:
                      author:
                        type: string
                      cid: {}
                      created: {}
                      datahash: {}
                      group: {}
                      id: {}
                      namespace:
                        type: string
                      tag:
                        type: string
                      topics:
                        items:
                          type: string
                        type: array
                      txtype:
                        type: string
                      type:
                        type: string
                    type: object
                  local:
                    type: boolean
                  pending:
                    type: boolean
                  pins:
                    items:
                      type: string
                    type: array
                  rejected:
                    type: boolean
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/broadcast/message:
    post:
      description: 'TODO: Description'
      operationId: postBroadcastMessage
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  items:
                    properties:
                      datatype:
                        properties:
                          name:
                            type: string
                          version:
                            type: string
                        type: object
                      hash:
                        type: string
                      id:
                        type: string
                      validator:
                        type: string
                      value:
                        type: object
                    type: object
                  type: array
                header:
                  properties:
                    author:
                      type: string
                    cid: {}
                    context:
                      type: string
                    group: {}
                    topic:
                      type: string
                    tx:
                      properties:
                        type:
                          default: pin
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                properties:
                  batch: {}
                  confirmed: {}
                  data:
                    items:
                      properties:
                        hash: {}
                        id: {}
                      type: object
                    type: array
                  hash: {}
                  header:
                    properties:
                      author:
                        type: string
                      cid: {}
                      created: {}
                      datahash: {}
                      group: {}
                      id: {}
                      namespace:
                        type: string
                      tag:
                        type: string
                      topics:
                        items:
                          type: string
                        type: array
                      txtype:
                        type: string
                      type:
                        type: string
                    type: object
                  local:
                    type: boolean
                  pending:
                    type: boolean
                  pins:
                    items:
                      type: string
                    type: array
                  rejected:
                    type: boolean
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/data:
    get:
      description: 'TODO: Description'
      operationId: getData
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: blob.hash
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: blob.public
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: datatype.name
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: datatype.version
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: hash
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: namespace
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: validator
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    blob:
                      properties:
                        hash: {}
                        public:
                          type: string
                      type: object
                    created: {}
                    datatype:
                      properties:
                        name:
                          type: string
                        version:
                          type: string
                      type: object
                    hash: {}
                    id: {}
                    namespace:
                      type: string
                    validator:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
    post:
      description: 'TODO: Description'
      operationId: postData
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                blob:
                  properties:
                    hash: {}
                    public:
                      type: string
                  type: object
                datatype:
                  properties:
                    name:
                      type: string
                    version:
                      type: string
                  type: object
                hash: {}
                id: {}
                validator:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
          multipart/form-data:
            schema:
              properties:
                autometa:
                  description: Success
                  type: string
                datatype.name:
                  description: Success
                  type: string
                datatype.version:
                  description: Success
                  type: string
                filename.ext:
                  format: binary
                  type: string
                metadata:
                  description: Success
                  type: string
                validator:
                  description: Success
                  type: string
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  blob:
                    properties:
                      hash: {}
                      public:
                        type: string
                    type: object
                  created: {}
                  datatype:
                    properties:
                      name:
                        type: string
                      version:
                        type: string
                    type: object
                  hash: {}
                  id: {}
                  namespace:
                    type: string
                  validator:
                    type: string
                  value:
                    format: byte
                    type: string
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/data/{dataid}:
    get:
      description: 'TODO: Description'
      operationId: getDataByID
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: dataid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  blob:
                    properties:
                      hash: {}
                      public:
                        type: string
                    type: object
                  created: {}
                  datatype:
                    properties:
                      name:
                        type: string
                      version:
                        type: string
                    type: object
                  hash: {}
                  id: {}
                  namespace:
                    type: string
                  validator:
                    type: string
                  value:
                    format: byte
                    type: string
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/data/{dataid}/blob:
    get:
      description: 'TODO: Description'
      operationId: getDataBlob
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: dataid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: author
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: batch
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: cid
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: confirmed
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: group
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: hash
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: local
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: namespace
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: pending
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: pins
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: rejected
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: sequence
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: tag
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: topics
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: txtype
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                format: byte
                type: string
          description: Success
        default:
          description: ""
  /namespaces/{ns}/data/{dataid}/messages:
    get:
      description: 'TODO: Description'
      operationId: getDataMsgs
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: dataid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: author
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: batch
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: cid
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: confirmed
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: group
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: hash
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: local
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: namespace
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: pending
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: pins
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: rejected
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: sequence
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: tag
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: topics
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: txtype
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  batch: {}
                  confirmed: {}
                  data:
                    items:
                      properties:
                        hash: {}
                        id: {}
                      type: object
                    type: array
                  hash: {}
                  header:
                    properties:
                      author:
                        type: string
                      cid: {}
                      created: {}
                      datahash: {}
                      group: {}
                      id: {}
                      namespace:
                        type: string
                      tag:
                        type: string
                      topics:
                        items:
                          type: string
                        type: array
                      txtype:
                        type: string
                      type:
                        type: string
                    type: object
                  local:
                    type: boolean
                  pending:
                    type: boolean
                  pins:
                    items:
                      type: string
                    type: array
                  rejected:
                    type: boolean
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/datatypes:
    get:
      description: 'TODO: Description'
      operationId: getDataDefs
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: message
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: name
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: namespace
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: validator
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: version
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created: {}
                    hash: {}
                    id: {}
                    message: {}
                    name:
                      type: string
                    namespace:
                      type: string
                    validator:
                      type: string
                    value:
                      format: byte
                      type: string
                    version:
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
  /namespaces/{ns}/datatypes/{dtid}:
    get:
      description: 'TODO: Description'
      operationId: getDataDefByID
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: dtid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created: {}
                  hash: {}
                  id: {}
                  message: {}
                  name:
                    type: string
                  namespace:
                    type: string
                  validator:
                    type: string
                  value:
                    format: byte
                    type: string
                  version:
                    type: string
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/events:
    get:
      description: 'TODO: Description'
      operationId: getEvents
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: group
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: namespace
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: reference
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: sequence
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created: {}
                    id: {}
                    namespace:
                      type: string
                    reference: {}
                    sequence:
                      format: int64
                      type: integer
                    type:
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
  /namespaces/{ns}/events/{eid}:
    get:
      description: 'TODO: Description'
      operationId: getEventByID
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: eid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created: {}
                  id: {}
                  namespace:
                    type: string
                  reference: {}
                  sequence:
                    format: int64
                    type: integer
                  type:
                    type: string
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/messages:
    get:
      description: 'TODO: Description'
      operationId: getMsgs
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: author
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: batch
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: cid
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: confirmed
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: group
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: hash
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: local
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: namespace
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: pending
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: pins
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: rejected
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: sequence
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: tag
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: topics
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: txtype
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    batch: {}
                    confirmed: {}
                    data:
                      items:
                        properties:
                          hash: {}
                          id: {}
                        type: object
                      type: array
                    hash: {}
                    header:
                      properties:
                        author:
                          type: string
                        cid: {}
                        created: {}
                        datahash: {}
                        group: {}
                        id: {}
                        namespace:
                          type: string
                        tag:
                          type: string
                        topics:
                          items:
                            type: string
                          type: array
                        txtype:
                          type: string
                        type:
                          type: string
                      type: object
                    local:
                      type: boolean
                    pending:
                      type: boolean
                    pins:
                      items:
                        type: string
                      type: array
                    rejected:
                      type: boolean
                  type: object
                type: array
          description: Success
        default:
          description: ""
  /namespaces/{ns}/messages/{msgid}:
    get:
      description: 'TODO: Description'
      operationId: getMsgByID
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: msgid
        required: true
        schema:
          type: string
      - description: 'TODO: Description'
        in: query
        name: data
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  batch: {}
                  confirmed: {}
                  data:
                    items:
                      properties:
                        blob:
                          properties:
                            hash: {}
                            public:
                              type: string
                          type: object
                        datatype:
                          properties:
                            name:
                              type: string
                            version:
                              type: string
                          type: object
                        hash: {}
                        id: {}
                        validator:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  group:
                    properties:
                      ledger: {}
                      members:
                        items:
                          properties:
                            identity:
                              type: string
                            node:
                              type: string
                          type: object
                        type: array
                      name:
                        type: string
                    type: object
                  hash: {}
                  header:
                    properties:
                      author:
                        type: string
                      cid: {}
                      created: {}
                      datahash: {}
                      group: {}
                      id: {}
                      namespace:
                        type: string
                      tag:
                        type: string
                      topics:
                        items:
                          type: string
                        type: array
                      txtype:
                        type: string
                      type:
                        type: string
                    type: object
                  local:
                    type: boolean
                  pending:
                    type: boolean
                  pins:
                    items:
                      type: string
                    type: array
                  rejected:
                    type: boolean
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/messages/{msgid}/data:
    get:
      description: 'TODO: Description'
      operationId: getMsgData
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: msgid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    blob:
                      properties:
                        hash: {}
                        public:
                          type: string
                      type: object
                    created: {}
                    datatype:
                      properties:
                        name:
                          type: string
                        version:
                          type: string
                      type: object
                    hash: {}
                    id: {}
                    namespace:
                      type: string
                    validator:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
  /namespaces/{ns}/messages/{msgid}/events:
    get:
      description: 'TODO: Description'
      operationId: getMsgEvents
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: msgid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: group
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: namespace
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: reference
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: sequence
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created: {}
                    id: {}
                    namespace:
                      type: string
                    reference: {}
                    sequence:
                      format: int64
                      type: integer
                    type:
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
  /namespaces/{ns}/messages/{msgid}/operations:
    get:
      description: 'TODO: Description'
      operationId: getMsgOps
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: msgid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    backendID:
                      type: string
                    created: {}
                    error:
                      type: string
                    id: {}
                    info:
                      additionalProperties: {}
                      type: object
                    member:
                      type: string
                    namespace:
                      type: string
                    plugin:
                      type: string
                    status:
                      type: string
                    tx: {}
                    type:
                      type: string
                    updated: {}
                  type: object
                type: array
          description: Success
        default:
          description: ""
  /namespaces/{ns}/messages/{msgid}/transaction:
    get:
      description: 'TODO: Description'
      operationId: getMsgTxn
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: msgid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created: {}
                  hash: {}
                  id: {}
                  info:
                    additionalProperties: {}
                    type: object
                  protocolID:
                    type: string
                  status:
                    type: string
                  subject:
                    properties:
                      namespace:
                        type: string
                      reference: {}
                      signer:
                        type: string
                      type:
                        type: string
                    type: object
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/operations:
    get:
      description: 'TODO: Description'
      operationId: getOps
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: backendid
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: error
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: info
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: member
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: namespace
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: plugin
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: status
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: tx
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: updated
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    backendID:
                      type: string
                    created: {}
                    error:
                      type: string
                    id: {}
                    info:
                      additionalProperties: {}
                      type: object
                    member:
                      type: string
                    namespace:
                      type: string
                    plugin:
                      type: string
                    status:
                      type: string
                    tx: {}
                    type:
                      type: string
                    updated: {}
                  type: object
                type: array
          description: Success
        default:
          description: ""
  /namespaces/{ns}/operations/{opid}:
    get:
      description: 'TODO: Description'
      operationId: getOpByID
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: opid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  backendID:
                    type: string
                  created: {}
                  error:
                    type: string
                  id: {}
                  info:
                    additionalProperties: {}
                    type: object
                  member:
                    type: string
                  namespace:
                    type: string
                  plugin:
                    type: string
                  status:
                    type: string
                  tx: {}
                  type:
                    type: string
                  updated: {}
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/request/message:
    post:
      description: 'TODO: Description'
      operationId: postRequestMessage
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  items:
                    properties:
                      datatype:
                        properties:
                          name:
                            type: string
                          version:
                            type: string
                        type: object
                      validator:
                        type: string
                      value:
                        type: object
                    type: object
                  type: array
                group:
                  properties:
                    members:
                      items:
                        properties:
                          identity:
                            type: string
                          node:
                            type: string
                        required:
                        - identity
                        type: object
                      type: array
                    name:
                      type: string
                  required:
                  - members
                  type: object
                header:
                  properties:
                    author:
                      type: string
                    cid: {}
                    context:
                      type: string
                    group: {}
                    topic:
                      type: string
                    tx:
                      properties:
                        type:
                          default: pin
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  batch: {}
                  confirmed: {}
                  data:
                    items:
                      properties:
                        blob:
                          properties:
                            hash: {}
                            public:
                              type: string
                          type: object
                        datatype:
                          properties:
                            name:
                              type: string
                            version:
                              type: string
                          type: object
                        hash: {}
                        id: {}
                        validator:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                  group:
                    properties:
                      ledger: {}
                      members:
                        items:
                          properties:
                            identity:
                              type: string
                            node:
                              type: string
                          type: object
                        type: array
                      name:
                        type: string
                    type: object
                  hash: {}
                  header:
                    properties:
                      author:
                        type: string
                      cid: {}
                      created: {}
                      datahash: {}
                      group: {}
                      id: {}
                      namespace:
                        type: string
                      tag:
                        type: string
                      topics:
                        items:
                          type: string
                        type: array
                      txtype:
                        type: string
                      type:
                        type: string
                    type: object
                  local:
                    type: boolean
                  pending:
                    type: boolean
                  pins:
                    items:
                      type: string
                    type: array
                  rejected:
                    type: boolean
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/send/message:
    post:
      description: 'TODO: Description'
      operationId: postSendMessage
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                data:
                  items:
                    properties:
                      datatype:
                        properties:
                          name:
                            type: string
                          version:
                            type: string
                        type: object
                      validator:
                        type: string
                      value:
                        type: object
                    type: object
                  type: array
                group:
                  properties:
                    members:
                      items:
                        properties:
                          identity:
                            type: string
                          node:
                            type: string
                        required:
                        - identity
                        type: object
                      type: array
                    name:
                      type: string
                  required:
                  - members
                  type: object
                header:
                  properties:
                    author:
                      type: string
                    cid: {}
                    context:
                      type: string
                    group: {}
                    topic:
                      type: string
                    tx:
                      properties:
                        type:
                          default: pin
                          type: string
                      type: object
                  type: object
              type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                properties:
                  batch: {}
                  confirmed: {}
                  data:
                    items:
                      properties:
                        hash: {}
                        id: {}
                      type: object
                    type: array
                  hash: {}
                  header:
                    properties:
                      author:
                        type: string
                      cid: {}
                      created: {}
                      datahash: {}
                      group: {}
                      id: {}
                      namespace:
                        type: string
                      tag:
                        type: string
                      topics:
                        items:
                          type: string
                        type: array
                      txtype:
                        type: string
                      type:
                        type: string
                    type: object
                  local:
                    type: boolean
                  pending:
                    type: boolean
                  pins:
                    items:
                      type: string
                    type: array
                  rejected:
                    type: boolean
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/subscriptions:
    get:
      description: 'TODO: Description'
      operationId: getSubscriptions
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: events
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: filter.group
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: filter.tag
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: filter.topics
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: name
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: namespace
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: options
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: transport
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created: {}
                    ephemeral:
                      type: boolean
                    filter:
                      properties:
                        author:
                          type: string
                        events:
                          type: string
                        group:
                          type: string
                        tag:
                          type: string
                        topics:
                          type: string
                      type: object
                    id: {}
                    name:
                      type: string
                    namespace:
                      type: string
                    options:
                      properties:
                        firstEvent:
                          type: string
                        readAhead:
                          maximum: 65535
                          minimum: 0
                          type: integer
                        withData:
                          type: boolean
                      type: object
                    transport:
                      type: string
                    updated: {}
                  type: object
                type: array
          description: Success
        default:
          description: ""
    post:
      description: 'TODO: Description'
      operationId: postNewSubscription
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                filter:
                  properties:
                    author:
                      type: string
                    events:
                      type: string
                    group:
                      type: string
                    tag:
                      type: string
                    topics:
                      type: string
                  type: object
                name:
                  type: string
                options:
                  oneOf:
                  - properties:
                      firstEvent:
                        anyOf:
                        - enum:
                          - oldest
                          - newest
                          type: string
                        - type: integer
                      readAhead:
                        maximum: 65536
                        minimum: 0
                        type: integer
                      type:
                        pattern: websockets
                        type: string
                      withData:
                        type: boolean
                  - properties:
                      fastack:
                        description: When true the event will be acknowledged before
                          the webhook is invoked, allowing parallel invocations
                        type: boolean
                      firstEvent:
                        anyOf:
                        - enum:
                          - oldest
                          - newest
                          type: string
                        - type: integer
                      headers:
                        additionalProperties:
                          type: string
                        description: Static headers to set on the webhook request
                        type: object
                      input:
                        description: A set of options to extract data from the first
                          JSON input data in the incoming message. Only applies if
                          withData=true
                        properties:
                          body:
                            description: A top-level property of the first data input,
                              to use for the request body. Default is the whole first
                              body
                            type: string
                          headers:
                            description: A top-level property of the first data input,
                              to use for headers
                            type: string
                          path:
                            description: A top-level property of the first data input,
                              to use for a path to append with escaping to the webhook
                              path
                            type: string
                          query:
                            description: A top-level property of the first data input,
                              to use for query parameters
                            type: string
                          replytx:
                            description: A top-level property of the first data input,
                              to use to dynamically set whether to pin the response
                              (so the requester can choose)
                            type: string
                        type: object
                      json:
                        description: Whether to assume the response body is JSON,
                          regardless of the returned Content-Type
                        type: boolean
                      method:
                        description: Webhook method to invoke. Default=POST
                        type: string
                      query:
                        additionalProperties:
                          type: string
                        description: Static query params to set on the webhook request
                        type: object
                      readAhead:
                        maximum: 65536
                        minimum: 0
                        type: integer
                      reply:
                        description: Whether to automatically send a reply event,
                          using the body returned by the webhook
                        type: boolean
                      replytag:
                        description: The tag to set on the reply message
                        type: string
                      replytx:
                        description: The transaction type to set on the reply message
                        type: string
                      type:
                        pattern: webhooks
                        type: string
                      url:
                        description: Webhook url to invoke. Can be relative if a base
                          URL is set in the webhook plugin config
                        type: string
                      withData:
                        type: boolean
                transport:
                  type: string
                updated: {}
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                properties:
                  created: {}
                  ephemeral:
                    type: boolean
                  filter:
                    properties:
                      author:
                        type: string
                      events:
                        type: string
                      group:
                        type: string
                      tag:
                        type: string
                      topics:
                        type: string
                    type: object
                  id: {}
                  name:
                    type: string
                  namespace:
                    type: string
                  options:
                    properties:
                      firstEvent:
                        type: string
                      readAhead:
                        maximum: 65535
                        minimum: 0
                        type: integer
                      withData:
                        type: boolean
                    type: object
                  transport:
                    type: string
                  updated: {}
                type: object
          description: Success
        default:
          description: ""
    put:
      description: 'TODO: Description'
      operationId: putSubscription
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                filter:
                  properties:
                    author:
                      type: string
                    events:
                      type: string
                    group:
                      type: string
                    tag:
                      type: string
                    topics:
                      type: string
                  type: object
                name:
                  type: string
                options:
                  oneOf:
                  - properties:
                      firstEvent:
                        anyOf:
                        - enum:
                          - oldest
                          - newest
                          type: string
                        - type: integer
                      readAhead:
                        maximum: 65536
                        minimum: 0
                        type: integer
                      type:
                        pattern: websockets
                        type: string
                      withData:
                        type: boolean
                  - properties:
                      fastack:
                        description: When true the event will be acknowledged before
                          the webhook is invoked, allowing parallel invocations
                        type: boolean
                      firstEvent:
                        anyOf:
                        - enum:
                          - oldest
                          - newest
                          type: string
                        - type: integer
                      headers:
                        additionalProperties:
                          type: string
                        description: Static headers to set on the webhook request
                        type: object
                      input:
                        description: A set of options to extract data from the first
                          JSON input data in the incoming message. Only applies if
                          withData=true
                        properties:
                          body:
                            description: A top-level property of the first data input,
                              to use for the request body. Default is the whole first
                              body
                            type: string
                          headers:
                            description: A top-level property of the first data input,
                              to use for headers
                            type: string
                          path:
                            description: A top-level property of the first data input,
                              to use for a path to append with escaping to the webhook
                              path
                            type: string
                          query:
                            description: A top-level property of the first data input,
                              to use for query parameters
                            type: string
                          replytx:
                            description: A top-level property of the first data input,
                              to use to dynamically set whether to pin the response
                              (so the requester can choose)
                            type: string
                        type: object
                      json:
                        description: Whether to assume the response body is JSON,
                          regardless of the returned Content-Type
                        type: boolean
                      method:
                        description: Webhook method to invoke. Default=POST
                        type: string
                      query:
                        additionalProperties:
                          type: string
                        description: Static query params to set on the webhook request
                        type: object
                      readAhead:
                        maximum: 65536
                        minimum: 0
                        type: integer
                      reply:
                        description: Whether to automatically send a reply event,
                          using the body returned by the webhook
                        type: boolean
                      replytag:
                        description: The tag to set on the reply message
                        type: string
                      replytx:
                        description: The transaction type to set on the reply message
                        type: string
                      type:
                        pattern: webhooks
                        type: string
                      url:
                        description: Webhook url to invoke. Can be relative if a base
                          URL is set in the webhook plugin config
                        type: string
                      withData:
                        type: boolean
                transport:
                  type: string
                updated: {}
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created: {}
                  ephemeral:
                    type: boolean
                  filter:
                    properties:
                      author:
                        type: string
                      events:
                        type: string
                      group:
                        type: string
                      tag:
                        type: string
                      topics:
                        type: string
                    type: object
                  id: {}
                  name:
                    type: string
                  namespace:
                    type: string
                  options:
                    properties:
                      firstEvent:
                        type: string
                      readAhead:
                        maximum: 65535
                        minimum: 0
                        type: integer
                      withData:
                        type: boolean
                    type: object
                  transport:
                    type: string
                  updated: {}
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/subscriptions/{subid}:
    delete:
      description: 'TODO: Description'
      operationId: deleteSubscription
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: subid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        default:
          description: ""
    get:
      description: 'TODO: Description'
      operationId: getSubscriptionByID
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: subid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created: {}
                  ephemeral:
                    type: boolean
                  filter:
                    properties:
                      author:
                        type: string
                      events:
                        type: string
                      group:
                        type: string
                      tag:
                        type: string
                      topics:
                        type: string
                    type: object
                  id: {}
                  name:
                    type: string
                  namespace:
                    type: string
                  options:
                    properties:
                      firstEvent:
                        type: string
                      readAhead:
                        maximum: 65535
                        minimum: 0
                        type: integer
                      withData:
                        type: boolean
                    type: object
                  transport:
                    type: string
                  updated: {}
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/transactions:
    get:
      description: 'TODO: Description'
      operationId: getTxns
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: info
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: namespace
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: protocolid
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: reference
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: sequence
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: signer
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: status
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created: {}
                    hash: {}
                    id: {}
                    info:
                      additionalProperties: {}
                      type: object
                    protocolID:
                      type: string
                    status:
                      type: string
                    subject:
                      properties:
                        namespace:
                          type: string
                        reference: {}
                        signer:
                          type: string
                        type:
                          type: string
                      type: object
                  type: object
                type: array
          description: Success
        default:
          description: ""
  /namespaces/{ns}/transactions/{txnid}:
    get:
      description: 'TODO: Description'
      operationId: getTxnByID
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: txnid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: info
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: namespace
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: protocolid
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: reference
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: sequence
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: signer
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: status
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: type
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created: {}
                  hash: {}
                  id: {}
                  info:
                    additionalProperties: {}
                    type: object
                  protocolID:
                    type: string
                  status:
                    type: string
                  subject:
                    properties:
                      namespace:
                        type: string
                      reference: {}
                      signer:
                        type: string
                      type:
                        type: string
                    type: object
                type: object
          description: Success
        default:
          description: ""
  /namespaces/{ns}/transactions/{txnid}/operations:
    get:
      description: 'TODO: Description'
      operationId: getTxnOps
      parameters:
      - description: 'TODO: Description'
        in: path
        name: ns
        required: true
        schema:
          example: default
          type: string
      - description: 'TODO: Description'
        in: path
        name: txnid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created: {}
                    hash: {}
                    id: {}
                    info:
                      additionalProperties: {}
                      type: object
                    protocolID:
                      type: string
                    status:
                      type: string
                    subject:
                      properties:
                        namespace:
                          type: string
                        reference: {}
                        signer:
                          type: string
                        type:
                          type: string
                      type: object
                  type: object
                type: array
          description: Success
        default:
          description: ""
  /network/nodes:
    get:
      description: 'TODO: Description'
      operationId: getNetworkNodes
      parameters:
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: description
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: dx.endpoint
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: dx.peer
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: message
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: name
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: owner
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created: {}
                    description:
                      type: string
                    dx:
                      properties:
                        endpoint:
                          additionalProperties: {}
                          type: object
                        peer:
                          type: string
                      type: object
                    id: {}
                    message: {}
                    name:
                      type: string
                    owner:
                      type: string
                  type: object
                type: array
          description: Success
        default:
          description: ""
  /network/nodes/{nid}:
    get:
      description: 'TODO: Description'
      operationId: getNetworkNode
      parameters:
      - description: 'TODO: Description'
        in: path
        name: nid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created: {}
                  description:
                    type: string
                  dx:
                    properties:
                      endpoint:
                        additionalProperties: {}
                        type: object
                      peer:
                        type: string
                    type: object
                  id: {}
                  message: {}
                  name:
                    type: string
                  owner:
                    type: string
                type: object
          description: Success
        default:
          description: ""
  /network/organizations:
    get:
      description: 'TODO: Description'
      operationId: getNetworkOrgs
      parameters:
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: created
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: description
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: id
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: identity
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: message
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: parent
        schema:
          type: string
      - description: 'Data filter field. Prefixes supported: > >= < <= @ ^ ! !@ !^'
        in: query
        name: profile
        schema:
          type: string
      - description: Sort field. For multi-field sort use comma separated values (or
          multiple query values) with '-' prefix for descending
        in: query
        name: sort
        schema:
          type: string
      - description: Ascending sort order (overrides all fields in a multi-field sort)
        in: query
        name: ascending
        schema:
          type: string
      - description: Descending sort order (overrides all fields in a multi-field
          sort)
        in: query
        name: descending
        schema:
          type: string
      - description: 'The number of records to skip (max: 1,000). Unsuitable for bulk
          operations'
        in: query
        name: skip
        schema:
          type: string
      - description: 'The maximum number of records to return (max: 1,000)'
        in: query
        name: limit
        schema:
          example: "25"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  properties:
                    created: {}
                    description:
                      type: string
                    id: {}
                    identity:
                      type: string
                    message: {}
                    name:
                      type: string
                    parent:
                      type: string
                    profile:
                      additionalProperties: {}
                      type: object
                  type: object
                type: array
          description: Success
        default:
          description: ""
  /network/organizations/{oid}:
    get:
      description: 'TODO: Description'
      operationId: getNetworkOrg
      parameters:
      - description: 'TODO: Description'
        in: path
        name: oid
        required: true
        schema:
          type: string
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  created: {}
                  description:
                    type: string
                  id: {}
                  identity:
                    type: string
                  message: {}
                  name:
                    type: string
                  parent:
                    type: string
                  profile:
                    additionalProperties: {}
                    type: object
                type: object
          description: Success
        default:
          description: ""
  /network/register/node:
    post:
      description: 'TODO: Description'
      operationId: postRegisterNode
      parameters:
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                properties:
                  batch: {}
                  confirmed: {}
                  data:
                    items:
                      properties:
                        hash: {}
                        id: {}
                      type: object
                    type: array
                  hash: {}
                  header:
                    properties:
                      author:
                        type: string
                      cid: {}
                      created: {}
                      datahash: {}
                      group: {}
                      id: {}
                      namespace:
                        type: string
                      tag:
                        type: string
                      topics:
                        items:
                          type: string
                        type: array
                      txtype:
                        type: string
                      type:
                        type: string
                    type: object
                  local:
                    type: boolean
                  pending:
                    type: boolean
                  pins:
                    items:
                      type: string
                    type: array
                  rejected:
                    type: boolean
                type: object
          description: Success
        default:
          description: ""
  /network/register/node/organization:
    post:
      description: 'TODO: Description'
      operationId: postRegisterNodeOrg
      parameters:
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                properties:
                  batch: {}
                  confirmed: {}
                  data:
                    items:
                      properties:
                        hash: {}
                        id: {}
                      type: object
                    type: array
                  hash: {}
                  header:
                    properties:
                      author:
                        type: string
                      cid: {}
                      created: {}
                      datahash: {}
                      group: {}
                      id: {}
                      namespace:
                        type: string
                      tag:
                        type: string
                      topics:
                        items:
                          type: string
                        type: array
                      txtype:
                        type: string
                      type:
                        type: string
                    type: object
                  local:
                    type: boolean
                  pending:
                    type: boolean
                  pins:
                    items:
                      type: string
                    type: array
                  rejected:
                    type: boolean
                type: object
          description: Success
        default:
          description: ""
  /network/register/organization:
    post:
      description: 'TODO: Description'
      operationId: postRegisterOrg
      parameters:
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                description:
                  type: string
                identity:
                  type: string
                name:
                  type: string
                parent:
                  type: string
                profile:
                  additionalProperties: {}
                  type: object
              type: object
      responses:
        "202":
          content:
            application/json:
              schema:
                properties:
                  batch: {}
                  confirmed: {}
                  data:
                    items:
                      properties:
                        hash: {}
                        id: {}
                      type: object
                    type: array
                  hash: {}
                  header:
                    properties:
                      author:
                        type: string
                      cid: {}
                      created: {}
                      datahash: {}
                      group: {}
                      id: {}
                      namespace:
                        type: string
                      tag:
                        type: string
                      topics:
                        items:
                          type: string
                        type: array
                      txtype:
                        type: string
                      type:
                        type: string
                    type: object
                  local:
                    type: boolean
                  pending:
                    type: boolean
                  pins:
                    items:
                      type: string
                    type: array
                  rejected:
                    type: boolean
                type: object
          description: Success
        default:
          description: ""
  /status:
    get:
      description: 'TODO: Description'
      operationId: getStatus
      parameters:
      - description: Server-side request timeout (millseconds, or set a custom suffix
          like 10s)
        in: header
        name: Request-Timeout
        schema:
          default: 120s
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                properties:
                  defaults:
                    properties:
                      namespace:
                        type: string
                    type: object
                  node:
                    properties:
                      id: {}
                      name:
                        type: string
                      registered:
                        type: boolean
                    type: object
                  org:
                    properties:
                      id: {}
                      identity:
                        type: string
                      name:
                        type: string
                      registered:
                        type: boolean
                    type: object
                type: object
          description: Success
        default:
          description: ""
servers:
- url: http://localhost:12345/api/v1
