// Code generated by mockery v1.0.0. DO NOT EDIT.

package defhandlermocks

import (
	context "context"

	defhandler "github.com/hyperledger/firefly/internal/defhandler"
	fftypes "github.com/hyperledger/firefly/pkg/fftypes"

	mock "github.com/stretchr/testify/mock"
)

// DefinitionHandler is an autogenerated mock type for the DefinitionHandler type
type DefinitionHandler struct {
	mock.Mock
}

// HandleDefinitionBroadcast provides a mock function with given fields: ctx, state, msg, data, tx
func (_m *DefinitionHandler) HandleDefinitionBroadcast(ctx context.Context, state defhandler.DefinitionBatchState, msg *fftypes.Message, data fftypes.DataArray, tx *fftypes.UUID) (defhandler.HandlerResult, error) {
	ret := _m.Called(ctx, state, msg, data, tx)

	var r0 defhandler.HandlerResult
	if rf, ok := ret.Get(0).(func(context.Context, defhandler.DefinitionBatchState, *fftypes.Message, fftypes.DataArray, *fftypes.UUID) defhandler.HandlerResult); ok {
		r0 = rf(ctx, state, msg, data, tx)
	} else {
		r0 = ret.Get(0).(defhandler.HandlerResult)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, defhandler.DefinitionBatchState, *fftypes.Message, fftypes.DataArray, *fftypes.UUID) error); ok {
		r1 = rf(ctx, state, msg, data, tx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
